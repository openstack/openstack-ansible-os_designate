---
# Copyright 2016, Tata Consultancy Services
#
# Licensed under the Apache License, Version 2.0 (the "License");
# you may not use this file except in compliance with the License.
# You may obtain a copy of the License at
#
#     http://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an "AS IS" BASIS,
# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
# See the License for the specific language governing permissions and
# limitations under the License.

- name: Fail if service was deployed using a different installation method
  fail:
    msg: "Switching installation methods for OpenStack services is not supported"
  when:
    - ansible_local is defined
    - ansible_local.openstack_ansible is defined
    - ansible_local.openstack_ansible.designate is defined
    - ansible_local.openstack_ansible.designate.install_method is defined
    - ansible_local.openstack_ansible.designate.install_method != designate_install_method

- name: Gather variables for each operating system
  include_vars: "{{ lookup('first_found', params) }}"
  vars:
    params:
      files:
        - "{{ ansible_facts['distribution'] | lower }}-{{ ansible_facts['distribution_version'] | lower }}.yml"
        - "{{ ansible_facts['distribution'] | lower }}-{{ ansible_facts['distribution_major_version'] | lower }}.yml"
        - "{{ ansible_facts['os_family'] | lower }}-{{ ansible_facts['distribution_major_version'] | lower }}.yml"
        - "{{ ansible_facts['distribution'] | lower }}.yml"
        - "{{ ansible_facts['os_family'] | lower }}.yml"
      paths:
        - "{{ role_path }}/vars"
  tags:
    - always

- name: Gather variables for installation method
  include_vars: "{{ designate_install_method }}_install.yml"
  tags:
    - always

- name: Including osa.db_setup role
  include_role:
    name: openstack.osa.db_setup
    apply:
      tags:
        - common-db
        - designate-config
  when:
    - "_designate_is_first_play_host"
  vars:
    _oslodb_setup_host: "{{ designate_db_setup_host }}"
    _oslodb_ansible_python_interpreter: "{{ designate_db_setup_python_interpreter }}"
    _oslodb_setup_endpoint: "{{ designate_galera_address }}"
    _oslodb_setup_port: "{{ designate_galera_port }}"
    _oslodb_databases:
      - name: "{{ designate_galera_database }}"
        users:
          - username: "{{ designate_galera_user }}"
            password: "{{ designate_galera_password }}"
  tags:
    - always

- name: Including osa.mq_setup role
  include_role:
    name: openstack.osa.mq_setup
    apply:
      tags:
        - common-mq
        - designate-config
  when:
    - "_designate_is_first_play_host"
  vars:
    _oslomsg_rpc_setup_host: "{{ designate_oslomsg_rpc_setup_host }}"
    _oslomsg_rpc_userid: "{{ designate_oslomsg_rpc_userid }}"
    _oslomsg_rpc_password: "{{ designate_oslomsg_rpc_password }}"
    _oslomsg_rpc_vhost: "{{ designate_oslomsg_rpc_vhost }}"
    _oslomsg_rpc_transport: "{{ designate_oslomsg_rpc_transport }}"
    _oslomsg_notify_setup_host: "{{ designate_oslomsg_notify_setup_host }}"
    _oslomsg_notify_userid: "{{ designate_oslomsg_notify_userid }}"
    _oslomsg_notify_password: "{{ designate_oslomsg_notify_password }}"
    _oslomsg_notify_vhost: "{{ designate_oslomsg_notify_vhost }}"
    _oslomsg_notify_transport: "{{ designate_oslomsg_notify_transport }}"
    _oslomsg_configure_notify: "{{ designate_ceilometer_enabled | bool }}"
  tags:
    - always

- name: Importing designate_pre_install tasks
  import_tasks: designate_pre_install.yml
  tags:
    - designate-install

- name: Importing designate_install tasks
  import_tasks: designate_install.yml
  tags:
    - designate-install

- name: Create and install SSL certificates
  include_role:
    name: pki
    tasks_from: main_certs.yml
    apply:
      tags:
        - designate-config
        - pki
  vars:
    pki_setup_host: "{{ designate_pki_setup_host }}"
    pki_dir: "{{ designate_pki_dir }}"
    pki_create_certificates: "{{ designate_user_ssl_cert is not defined and designate_user_ssl_key is not defined }}"
    pki_regen_cert: "{{ designate_pki_regen_cert }}"
    pki_certificates: "{{ designate_pki_certificates }}"
    pki_install_certificates: "{{ designate_pki_install_certificates }}"
  when:
    - designate_backend_ssl
  tags:
    - always

- name: Importing designate_post_install tasks
  import_tasks: designate_post_install.yml
  tags:
    - designate-install
    - designate-config

- name: Including osa.service_setup tasks
  include_role:
    name: openstack.osa.service_setup
    apply:
      tags:
        - common-service
        - designate-config
  vars:
    _service_adminuri_insecure: "{{ keystone_service_adminuri_insecure }}"
    _service_in_ldap: "{{ designate_service_in_ldap }}"
    _service_setup_host: "{{ designate_service_setup_host }}"
    _service_setup_host_python_interpreter: "{{ designate_service_setup_host_python_interpreter }}"
    _service_project_name: "{{ designate_service_project_name }}"
    _service_region: "{{ designate_service_region }}"
    _service_users:
      - name: "{{ designate_service_user_name }}"
        password: "{{ designate_service_password }}"
        role: "{{ designate_service_role_names }}"
    _service_endpoints:
      - service: "{{ designate_service_name }}"
        interface: "public"
        url: "{{ designate_service_publicuri }}"
      - service: "{{ designate_service_name }}"
        interface: "internal"
        url: "{{ designate_service_internaluri }}"
      - service: "{{ designate_service_name }}"
        interface: "admin"
        url: "{{ designate_service_adminuri }}"
    _service_catalog:
      - name: "{{ designate_service_name }}"
        type: "{{ designate_service_type }}"
        description: "{{ designate_service_description }}"
  when: _designate_is_first_play_host
  tags:
    - always

- name: Run the systemd service role
  import_role:
    name: systemd_service
  vars:
    systemd_user_name: "{{ designate_system_user_name }}"
    systemd_group_name: "{{ designate_system_group_name }}"
    systemd_service_restart_changed: false
    systemd_tempd_prefix: openstack
    systemd_slice_name: designate
    systemd_lock_path: /var/lock/designate
    systemd_service_cpu_accounting: true
    systemd_service_block_io_accounting: true
    systemd_service_memory_accounting: true
    systemd_service_tasks_accounting: true
    systemd_services: "{{ filtered_designate_services }}"
  tags:
    - designate-config
    - systemd-service

- name: Flush handlers
  meta: flush_handlers

- name: Importing designate_db_sync tasks
  import_tasks: designate_db_sync.yml
  when: _designate_is_first_play_host
  tags:
    - designate-install

- name: Place Designate pools.yaml file
  copy:
    content: "{{ designate_pools_yaml | to_nice_yaml }}"
    dest: "/etc/designate/pools.yaml"
    mode: "0640"
    owner: "{{ designate_system_user_name }}"
    group: "{{ designate_system_group_name }}"
  when:
    - designate_pools_yaml is defined
    - _designate_is_last_play_host
  notify:
    - Perform Designate pools update
  tags:
    - designate-config

- name: Flush handlers
  meta: flush_handlers
